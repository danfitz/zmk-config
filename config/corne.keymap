/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>

#define DEFAULT 0
#define LOWER   1
#define RAISE   2
#define ADJST   3
#define FUNCT   4

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };
    
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// --------------------------------------------------------------------------------------
// | TAB  |  Q   |  W   |  E  |  R  |  T  |   |  Y  |  U  |  I  |  O  |  P  |   BKSP    |
// | ESC  |  A   |  S   |  D  |  F  |  G  |   |  H  |  J  |  K  |  L  |  ;  |    '      |
// | SHFT |CTL(Z)|ALT(X)|  C  |  V  |  B  |   |  N  |  M  |  ,  |  .  |  /  | SHFT(RET) |
//                      | GUI | LWR | SPC |   | ADJ | RSE | FNT |
                        bindings = <
   &kp TAB   &kp Q       &kp W      &kp E    &kp R     &kp T         &kp Y     &kp U     &kp I     &kp O   &kp P    &kp BSPC
   &kp ESC   &kp A       &kp S      &kp D    &kp F     &kp G         &kp H     &kp J     &kp K     &kp L   &kp SEMI &kp SQT
   &kp LSHFT &hm LCTRL Z &hm LALT X &kp C    &kp V     &kp B         &kp N     &kp M     &kp COMMA &kp DOT &kp FSLH &mt RSHFT RET
                                    &kp LGUI &mo LOWER &kp SPACE     &mo ADJST &mo RAISE &mo FUNCT
                        >;
                };
                lower_layer {
// ------------------------------------------------------------------------------------
// |  `   |  1  |  2  |  3  |  4  |  5  |       |  6  |  7  |  8  |  9  |  0  |    BKSP   |
// | ESC  |     |     |     |     |     |       |     |  -  |  =  |  [  |  ]  |     \     |
// | SHFT | CTL | ALT |     |     |     |       |     | HOME|  ,  |  .  |  /  | SHFT(RET) |
//                          | GUI | ADJ | SPACE | ADJ |     |
                        bindings = <
   &kp GRAVE &kp N1    &kp N2   &kp N3   &kp N4    &kp N5       &kp N6    &kp N7    &kp N8    &kp N9   &kp N0   &kp BSPC
   &kp ESC   &none     &none    &none    &none     &none        &none     &kp MINUS &kp EQUAL &kp LBKT &kp RBKT &kp BSLH
   &kp LSHFT &kp LCTRL &kp LALT &none    &none     &reset       &none     &none     &kp COMMA &kp DOT  &kp FSLH &mt RSHFT RET
                          	    &kp LGUI &mo ADJST &kp SPACE    &mo ADJST &mo ADJST &none
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// |  ~   |  !  |  @  |  #  |  $  |  %  |       |  ^  |  &  |  *  |  (  |  )  |    BKSP   |
// | ESC  |     |     |     |     |     |       |     |  _  |  +  |  {  |  }  |    "|"    |
// | SHFT | CTL | ALT |     |     |     |       |     |     |  <  |  >  |  ?  | SHFT(RET) |
//                          | GUI | ADJ | SPACE | ADJ |     |
                        bindings = <
   &kp TILDE &kp EXCL  &kp AT   &kp HASH &kp DLLR  &kp PRCNT    &kp CARET &kp AMPS  &kp ASTRK   &kp LPAR &kp RPAR  &kp BSPC
   &kp ESC   &none     &none    &none    &none     &none        &none     &kp UNDER &kp KP_PLUS &kp LBRC &kp RBRC  &kp PIPE
   &kp LSHFT &kp LCTRL &kp LALT &none    &none     &none        &reset    &none     &kp LT      &kp GT   &kp QMARK &mt RSHFT RET
                          	    &kp LGUI &mo ADJST &kp SPACE    &mo ADJST &mo ADJST &none
                        >;
                };

                adjust_layer {
// -----------------------------------------------------------------------------------------------------------
// | TAB  |     |     |  BRIDN  |  BRIUP  |      |       |  HOME  |  PGUP  |  UP  |  PGDN  |     |   BKSP    |
// | ESC  |     |     |  VOLDN  |  VOLUP  | MUTE |       |  END   |  LEFT  |  DN  |  RGHT  |     |           |
// | SHFT | CTL | ALT |         |         |      |       |        |        |      |        |     | SHFT(RET) |
//                              |  LGUI   |      | SPACE |        |        |
                        bindings = <
   &kp TAB   &none     &none    &kp C_BRI_DN &kp C_BRI_UP &none         &kp HOME &kp PG_UP &kp UP   &kp PG_DN &none &kp BSPC
   &kp ESC   &none     &none    &kp C_VOL_DN &kp C_VOL_UP &kp C_MUTE    &kp END  &kp LEFT  &kp DOWN &kp RIGHT &none &none
   &kp LSHFT &kp LCTRL &kp LALT &none        &none        &none         &none    &none     &none    &none     &none &mt RSHFT RET
                                &kp LGUI     &none        &kp SPACE     &none    &none     &none
                        >;
                };

                funct_layer {
// ----------------------------------------------------------------------------------
// |     |     |     |     |     |     |     | BT1 | BT2 | BT3 | BT4 | BT5 | BT CLR |
// |     |     |     |     |     |     |     |     |     |     |     |     |        |
// |     |     |     |     |     |     |     |     |     |     |     |     |        |
//                         |     |     |     |     |     |
                        bindings = <
   &ext_power EP_OFF &none &none &none &none &none    &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &bt BT_CLR
   &none             &none &none &none &none &none    &none        &none        &none        &none        &none        &none
   &none             &none &none &none &none &none    &none        &none        &none        &none        &none        &none
                     &none &none &none    &none        &none        &none
                        >;
                };
        };
};
